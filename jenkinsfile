pipeline {
    agent {
        label 'AGENT-1' // our node
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()  //  to not to run the code by other person at the same time.
        ansiColor('xterm') // terraform colours
    }
    environment {
        def appVersion = '' // variable declaration for whole code/ global and we left to access
    }
    stages {
        stage ( 'read the vesrion') {
            steps{
                script {  // script to read definition def command
                    def packageJSON = readJSON file: 'package.json'
                    appVersion = packageJSON.vesrion  // we access variable value here 
                    echo "application version: $appversion"  // we are printing the version
        
                }
            }
        }
        stage('Install Dependencies') {
            steps {
               sh """
                npm install
               """
            }
        }
    }
    post { 
        always { 
            echo 'I will always say Hello again!'
            deleteDir()   // to delete after build to avoid futher build anticipated errors
        }
        success { 
            echo 'I will run when pipeline is success'
        }
        failure { 
            echo 'I will run when pipeline is failure'
        }
    }
}